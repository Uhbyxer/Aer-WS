

CREATE COMPUTE MODULE testAppFlow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		 CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		 		
		--DECLARE pnrValue INTEGER  0; 
		--SET pnrValue = InputLocalEnvironment.HTTP.Input.QueryString.pnr;		
		DECLARE pnrValue CHARACTER InputLocalEnvironment.HTTP.Input.QueryString.pnr;
		
		IF LENGTH(pnrValue) <> 6 OR NOT STARTSWITH(pnrValue, '2') THEN
			CALL ThrowServiceException('Invalid pnr value!');
		ELSE
			SET Environment.PNR = pnrValue;
			--$LocalEnvironment/Destination/File/Name
			--LocalEnvironment.Destination.File.Name = 'mock1.rsp';
			--SET Environment.FileName = 'mock1.rsp';
			
			IF pnrValue < 250000 THEN
				SET OutputLocalEnvironment.Destination.File.Name = 'mock1.rsp';
			ELSE 
				SET OutputLocalEnvironment.Destination.File.Name = 'mock2.rsp';
			END IF;		
			 	
--			PROPAGATE TO TERMINAL 0;
		END IF;		
		
		

		
		
		RETURN TRUE;
	END;
	
	CREATE PROCEDURE ThrowServiceException(IN error CHAR)
	BEGIN
		THROW EXCEPTION VALUES(error);
	END;
	
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;



CREATE COMPUTE MODULE testAppFlow_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE ota NAMESPACE 'http://www.opentravel.org/OTA/2003/05';
		DECLARE airReservation REFERENCE TO InputRoot.XMLNSC.ota:OTA_AirBookRS.ota:AirReservation;
		DECLARE odos REFERENCE TO airReservation.ota:AirItinerary.ota:OriginDestinationOptions;
		
		
		DECLARE flightIndex INT 1;
		FOR odo AS odos.ota:OriginDestinationOption[] DO			
			DECLARE flightRPH INT FIELDVALUE(odo.RPH);	
			
			
			SET OutputRoot.XMLNSC.TestAppRS.Flights.Flight[flightIndex].(XMLNSC.Attribute)RPH = flightRPH;
			--DECLARE flightsRoot REFERENCE TO OutputRoot.XMLNSC.TestAppRS.Flights.Flight[flightIndex];
			--SET flightsRoot.(XMLNSC.Attribute)RPH = flightRPH;
			
			DECLARE tickets ROW;
			SET tickets.ticket[] = SELECT FIELDVALUE(ticket.TravelerRefNumber) AS travelerRPH, FIELDVALUE(ticket.PassengerTypeCode) AS travelerType
								   FROM airReservation.ota:Ticketing[] AS ticket
								   WHERE FIELDVALUE(ticket.FlightSegmentRefNumber) = flightRPH;
								   
			DECLARE ticketIndex INT 1;
			FOR ticket AS tickets.ticket[] DO
				
				SET OutputRoot.XMLNSC.TestAppRS.Flights.Flight[flightIndex].Travelers.Traveler[ticketIndex].(XMLNSC.Attribute)RPH = ticket.travelerRPH;
				
				DECLARE travelers ROW;
				SET travelers.traveler[] = SELECT traveler.ota:PersonName.ota:GivenName as travelerName
								           FROM airReservation.ota:TravelerInfo.ota:AirTraveler[] AS traveler 
								           WHERE traveler.ota:TravelerRefNumber.(XMLNSC.Attribute)RPH = ticket.travelerRPH;
								           
				SET OutputRoot.XMLNSC.TestAppRS.Flights.Flight[flightIndex].Travelers.Traveler[ticketIndex].(XMLNSC.Attribute)Name = travelers.traveler[1].travelerName;
				
				SET OutputRoot.XMLNSC.TestAppRS.Flights.Flight[flightIndex].Travelers.Traveler[ticketIndex].(XMLNSC.Attribute)Type = ticket.travelerType;	
				
				SET ticketIndex = ticketIndex + 1;			
			END FOR;						   
								   
			SET flightIndex = flightIndex + 1;					    
				
		END FOR;

		RETURN TRUE;
	END;

END MODULE;






